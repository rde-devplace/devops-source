#!/bin/bash

# 환경 변수 및 설정값 정의
KEYCLOAK_URI="https://console-dev.amdp-dev.cloudzcp.io/iam"
CLIENT_ID="kube-proxy-renew"
CLIENT_SECRET="B3x4C4DARIYPVemmXghmxZZdFGhfofWN"
USERNAME="himang10"
PASSWORD="ywyi1004"
#KUBE_PROXY_URL="http://localhost:8080/api/route"
KUBE_PROXY_URL="kube-proxy.amdp-dev.skamdp.org/api/route"
CPU="200m"
MEMORY="512Mi"
DISK="20Gi"

# 인자로 주어진 값 확인
if [ "$#" -ne 1 ]; then
    echo "Missing required parameters."
    echo "Usage: $0 <NAME>"
    echo "Example: $0 himang10"
    exit 1
fi

NAME=$1

declare -a PATHS=(
    "/$NAME/vscode/**"
    "/$NAME/cli/**"
    "/$NAME/8080/**"
    "/$NAME/8081/**"
    "/$NAME/9090/**"
    "/$NAME/9091/**"
)

declare -a URIS=(
    "http://$NAME-vscode-server-service:8443"
    "http://$NAME-vscode-server-service:3000"
    "http://$NAME-vscode-server-service:8080"
    "http://$NAME-vscode-server-service:8081"
    "http://$NAME-vscode-server-service:9090"
    "http://$NAME-vscode-server-service:9091"
)

# 토큰 가져오기
#  --data-urlencode 'grant_type=password' \
TOKEN_RESPONSE=$(curl -s -L -X POST \
  "$KEYCLOAK_URI/realms/amdp-dev/protocol/openid-connect/token" \
  -H 'Content-Type: application/x-www-form-urlencoded' \
  --data-urlencode "client_id=$CLIENT_ID" \
  --data-urlencode "client_secret=$CLIENT_SECRET" \
  --data-urlencode 'grant_type=password' \
  --data-urlencode 'scope=email roles profile' \
  --data-urlencode "username=$USERNAME" \
  --data-urlencode "password=$PASSWORD")

# TOKEN_RESPONSE의 JSON 값을 화면에 출력
echo "Token Response:"
echo "$TOKEN_RESPONSE" | jq
echo ""

# access_token 추출
ACCESS_TOKEN=$(echo $TOKEN_RESPONSE | jq -r .access_token)

if [ -z "$ACCESS_TOKEN" ]; then
    echo "Failed to retrieve access token."
    exit 1
fi

if [ "$NAME" == "init" ]; then
    # init 입력 파라미터에 대한 특별 처리
    data='{
        "id": null,
        "path": "/console/**",
        "uri": "http://frontend-ide-service:8080",
        "method": "GET,POST,PUT,DELETE,PATCH,OPTIONS",
        "host": null,
        "headerName": null,
        "headerValue": null,
        "pathPattern": "/console/(?<segment>.*)",
        "pathReplacement": "/console/${segment}",
        "tokenRelay": true,
        "userName": "common"
    }'
    echo "Sending special ProxyRouter data for init to $KUBE_PROXY_URL..."
    RESPONSE=$(curl -s -L -X POST \
      "$KUBE_PROXY_URL" \
      -H 'Content-Type: application/json' \
      -H "Authorization: Bearer $ACCESS_TOKEN" \
      -d "$data")
    echo "Response from $KUBE_PROXY_URL:"
    echo "$RESPONSE" | jq
    echo ""
    exit 0  # init일 경우 여기서 스크립트 종료
fi


# IdeConfig yaml 데이터 생성 및 kubectl apply 실행
cat <<EOF | kubectl apply -f -
apiVersion: amdev.cloriver.io/v1
kind: IdeConfig
metadata:
  name: $NAME-vscode-server
spec:
  userName: "$NAME"
  userId: "208b944e-0c8d-44f7-a495-9cb12c530ee5"
  serviceAccountName: "cluster-admin-sa"
  portList:
    - name: "http"
      protocol: "TCP"
      port: 8080
      targetPort: 8080
    - name: "admin"
      protocol: "TCP"
      port: 9090
      targetPort: 9090
  infrastructureSize:
    cpu: "$CPU"
    memory: "$MEMORY"
    disk: "$DISK"
  replicas: 1
EOF

if [ $? -ne 0 ]; then
    echo "Failed to apply IdeConfig. Exiting..."
    exit 1
fi

echo
echo "IdeConfig applied successfully."
echo

#
# "/$NAME/vscode/**"에 대한 특별한 처리
data='{
    "id": null,
    "path": "/'$NAME'/vscode/**",
    "uri": "http://'$NAME'-vscode-server-service:8443",
    "method": "GET,POST,PUT,DELETE,PATCH,OPTIONS",
    "host": null,
    "headerName": null,
    "headerValue": null,
    "pathPattern": "/'$NAME'/(?<segment>.*)",
    "pathReplacement": "/${segment}",
    "tokenRelay": true,
    "userName":  "'$NAME'"
}'

echo "Sending ProxyRouter data to $KUBE_PROXY_URL with path /$NAME/vscode/** and uri http://$NAME-vscode-server-service:8443..."
RESPONSE=$(curl -s -L -X POST \
  "$KUBE_PROXY_URL" \
  -H 'Content-Type: application/json' \
  -H "Authorization: Bearer $ACCESS_TOKEN" \
  -d "$data")
echo "Response from $KUBE_PROXY_URL:"
echo "$RESPONSE" | jq
echo ""

# 나머지 PATHS 항목에 대한 처리
for i in "${!PATHS[@]}"; do
    path="${PATHS[$i]}"
    uri="${URIS[$i]}"
    # "/$NAME/vscode/**"를 제외하고 처리
    if [ "$path" != "/$NAME/vscode/**" ]; then
        data='{
            "id": null,
            "path": "'$path'",
            "uri": "'$uri'",
            "method": "GET,POST,PUT,DELETE,PATCH,OPTIONS",
            "host": null,
            "headerName": null,
            "headerValue": null,
            "tokenRelay": true,
            "userName":  "'$NAME'"
        }'
        echo "Sending ProxyRouter data to $KUBE_PROXY_URL with path $path and uri $uri..."
        RESPONSE=$(curl -s -L -X POST \
          "$KUBE_PROXY_URL" \
          -H 'Content-Type: application/json' \
          -H "Authorization: Bearer $ACCESS_TOKEN" \
          -d "$data")
        echo "Response from $KUBE_PROXY_URL:"
        echo "$RESPONSE" | jq
        echo ""
    fi
done


echo
echo "--------------------------"
echo "result: "
# curl 명령 실행
curl --location --request GET "$KUBE_PROXY_URI/list" \
--header 'Accept: application/json' \
--header "Authorization: Bearer $ACCESS_TOKEN"
echo
echo "--------------------------"

